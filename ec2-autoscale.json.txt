{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template deploys a full application stack, including a network, bastion host, auto scaled EC2. It creates a VPC infrastructure for a multi-AZ, multi-tier deployment of a Linux based Application infrastructure. It will deploy a bastion and managed NAT gateways or NAT instances into the public subnet for each Availability Zone. ",
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "DEPLOYMENT"
          },
          "Parameters": [
            "deploymentName",
			"CreateVPC",
			"CurrentVPC"
          ]
        },
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "availabilityZones",
            "vpcCIDR",
            "publicSubnet1CIDR",
            "publicSubnet2CIDR",
            "privateSubnet1CIDR",
            "privateSubnet2CIDR"
          ]
        },
        {
          "Label": {
            "default": "EC2 Configuration"
          },
          "Parameters": [
            "keyPairName",
            "remoteAccessCIDR",
            "instanceType"
          ]
        },
        {
          "Label": {
            "default": "Others"
          },
          "Parameters": [
            "RepoRootURL"
          ]
        }
      ]
    }
  },
  "Parameters": {
    "availabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Note: The logical order is preserved and only 2 AZs are used for this deployment.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
	"CreateVPC": {
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Type": "String",
      "Default": "Yes"
    },
    "CurrentVPC": {
      "Description": "List of VPC",
      "Type": "List<AWS::EC2::VPC::Id>"
    },
    "keyPairName": {
      "Description": "Public/private key pairs allow you to securely connect to your instance after it launches.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "privateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.11.0/24",
      "Description": "CIDR block for private subnet 1 located in Availability Zone 1.",
      "Type": "String"
    },
    "privateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.21.0/24",
      "Description": "CIDR block for private subnet 2 located in Availability Zone 2.",
      "Type": "String"
    },
    "publicSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.10.0/24",
      "Description": "CIDR Block for the public DMZ subnet 1 located in Availability Zone 1.",
      "Type": "String"
    },
    "publicSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.20.0/24",
      "Description": "CIDR Block for the public DMZ subnet 2 located in Availability Zone 2.",
      "Type": "String"
    },
    "vpcCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/16",
      "Description": "CIDR Block for the VPC.",
      "Type": "String"
    },
    "remoteAccessCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
      "Description": "Allowed CIDR block for external SSH access to the bastions.",
      "Type": "String"
    },
    "RepoRootURL": {
      "Type": "String",
      "Description": "Root url for Cloudformation Template"
    },
    "deploymentName": {
      "Description": "Name is used as a prefix for object names.",
      "Type": "String",
      "MaxLength": 25
    },
    "instanceType": {
      "AllowedValues": [
        "m3.2xlarge",
        "m4.xlarge",
        "m4.2xlarge",
        "m4.4xlarge",
        "m4.10xlarge",
        "m5.large",
        "m5.xlarge",
        "m5.2xlarge",
        "m5.4xlarge",
        "c3.4xlarge",
        "c3.8xlarge",
        "c4.4xlarge",
        "c4.8xlarge",
        "c5.large",
        "c5.xlarge",
        "c5.2xlarge",
        "c5.4xlarge",
        "cc2.8xlarge",
        "c5n.2xlarge",
        "c5n.4xlarge"
      ],
      "ConstraintDescription": "Must be a valid EC2 instance type for BIG-IP",
      "Default": "m3.2xlarge",
      "Description": "AWS instance type",
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateVPCResources" : {"Fn::Equals" : [{"Ref" : "CreateVPC"}, "Yes"]}
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "${RepoRootURL}/aws-vpc.yaml",
        "Parameters": {
          "AvailabilityZones": [
            ",",
            "availabilityZones"
          ],
          "KeyPairName": "keyPairName",
          "NumberOfAZs": "2",
          "PrivateSubnet1ACIDR": "privateSubnet1CIDR",
          "PrivateSubnet2ACIDR": "privateSubnet2CIDR",
          "PublicSubnet1CIDR": "publicSubnet1CIDR",
          "PublicSubnet2CIDR": "publicSubnet2CIDR",
          "VPCCIDR": "vpcCIDR"
        }
      }
    },
    "BastionStack": {
      "DependsOn": "VPCStack",
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "${RepoRootURL}/linux-bastion.yaml",
        "Parameters": {
          "BastionAMIOS": "Ubuntu-Server-16.04-LTS-HVM",
          "BastionBanner": "",
          "BastionInstanceType": "t2.micro",
          "EnableBanner": "false",
          "EnableTCPForwarding": "true",
          "EnableX11Forwarding": "true",
          "KeyPairName": "keyPairName",
          "NumBastionHosts": "1",
          "PublicSubnet1ID": "VPCStack.Outputs.PublicSubnet1ID",
          "PublicSubnet2ID": "VPCStack.Outputs.PublicSubnet2ID",
          "RemoteAccessCIDR": "remoteAccessCIDR",
          "VPCID": "VPCStack.Outputs.VPCID"
        }
      }
    },
    "ExternalLBStack": {
      "Type": "AWS::CloudFormation::Stack",
      "DependsOn": "BastionStack",
      "Properties": {
        "TemplateURL": "${RepoRootURL}/external-LB.yaml",
        "Parameters": {
          "deploymentName": "deploymentName",
          "poolPort": "443",
          "vpc": "VPCStack.Outputs.VPCID",
          "subnets": [
            ",",
            [
              "VPCStack.Outputs.PublicSubnet1ID",
              "VPCStack.Outputs.PublicSubnet2ID"
            ]
          ]
        }
      }
    },
    "EC2Stack": {
      "DependsOn": "ExternalLBStack",
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": "${RepoRootURL}/<your EC2 CFT>.yaml",
        "Parameters": {
          "deploymentName": "deploymentName",
          "Vpc": "VPCStack.Outputs.VPCID",
          "availabilityZones": [
            ",",
            "availabilityZones"
          ],
          "subnets": [
            ",",
            [
              "VPCStack.Outputs.PrivateSubnet1AID",
              "VPCStack.Outputs.PrivateSubnet2AID"
            ]
          ],
          "restrictedSrcAddress": "remoteAccessCIDR",
          "sshKey": "keyPairName",
          "instanceType": "instanceType"
        }
      }
    }
  }
}